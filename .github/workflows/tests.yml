on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

name: Tests

jobs:
  pytest:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        pyversion: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ${{ matrix.os }}
    env:
      QT_QPA_PLATFORM: offscreen
      MANIM_SLIDES_VERBOSITY: error
      PYTHONFAULTHANDLER: 1
      DISPLAY: :99
      GITHUB_WORKFLOWS: 1
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.pyversion }}
        cache: true

      # Path related stuff
    - name: Append to Path on MacOS
      if: matrix.os == 'macos-latest'
      run: |
        echo "${HOME}/.local/bin" >> $GITHUB_PATH
        echo "/Users/runner/Library/Python/${{ matrix.pyversion }}/bin" >> $GITHUB_PATH

    - name: Append to Path on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

    - name: Append to Path on Windows
      if: matrix.os == 'windows-latest'
      run: echo "${HOME}/.local/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # OS depedencies
    - name: Install manim dependencies on MacOS
      if: matrix.os == 'macos-latest'
      run: brew install ffmpeg py3cairo

    - name: Install manim dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libcairo2-dev libpango1.0-dev ffmpeg freeglut3-dev
        sudo apt-get install xvfb
        nohup Xvfb $DISPLAY &

    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: choco install ffmpeg

    - name: Install Mesa
      if: matrix.os == 'windows-latest'
      uses: ssciwr/setup-mesa-dist-win@v1

    - name: Install Manim Slides
      run: |
        pdm install -dGgithub-action -dGtest

    - name: Run pytest
      if: matrix.os != 'ubuntu-latest' || matrix.pyversion != '3.11'
      run: pdm run pytest

    - name: Run pytest and coverage
      if: matrix.os == 'ubuntu-latest' && matrix.pyversion == '3.11'
      run: pdm run pytest --cov-report xml --cov=manim_slides tests/

    - name: Upload to codecov.io
      if: matrix.os == 'ubuntu-latest' && matrix.pyversion == '3.11'
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        fail_ci_if_error: true
